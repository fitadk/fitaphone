var _user$project$Page1$decodeUserData = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'statusCode',
		_1: {ctor: '[]'}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Page1$userEncoder = function (model) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'username',
				_1: _elm_lang$core$Json_Encode$string(model.userName)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'phonenumer',
					_1: _elm_lang$core$Json_Encode$string(model.phoneNumber)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'email',
						_1: _elm_lang$core$Json_Encode$string(model.email)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Page1$getUsers = function (model) {
	return _elm_lang$core$Platform_Cmd$none;
};
var _user$project$Page1$rightStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'right'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: '10px'},
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Page1$renderUserList = function (users) {
	return A2(
		_elm_lang$core$List$map,
		function (i) {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Table$tr,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Table$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(i.name),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Table$td,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(i.tlf),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Table$td,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(i.date),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				});
		},
		users);
};
var _user$project$Page1$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Page1$User = F3(
	function (a, b, c) {
		return {name: a, tlf: b, date: c};
	});
var _user$project$Page1$userDecoder = A4(
	_elm_lang$core$Json_Decode$map3,
	_user$project$Page1$User,
	A2(_elm_lang$core$Json_Decode$field, 'username', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'phonenumber', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'lastactive', _elm_lang$core$Json_Decode$string));
var _user$project$Page1$decodeUserListData = _elm_lang$core$Json_Decode$list(_user$project$Page1$userDecoder);
var _user$project$Page1$Model = F6(
	function (a, b, c, d, e, f) {
		return {state: a, lastRequestCode: b, userName: c, phoneNumber: d, email: e, users: f};
	});
var _user$project$Page1$ShowCreateUser = {ctor: 'ShowCreateUser'};
var _user$project$Page1$ShowUserList = {ctor: 'ShowUserList'};
var _user$project$Page1$UpdateUserList = function (a) {
	return {ctor: 'UpdateUserList', _0: a};
};
var _user$project$Page1$doListUsers = function () {
	var url = 'http://localhost:8000/testuserlist.json';
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Page1$UpdateUserList,
		A2(_elm_lang$http$Http$get, url, _user$project$Page1$decodeUserListData));
}();
var _user$project$Page1$init = {
	ctor: '_Tuple2',
	_0: A6(
		_user$project$Page1$Model,
		_user$project$Page1$ShowUserList,
		'0',
		'',
		'',
		'',
		{ctor: '[]'}),
	_1: _user$project$Page1$doListUsers
};
var _user$project$Page1$UserCreated = function (a) {
	return {ctor: 'UserCreated', _0: a};
};
var _user$project$Page1$doCreateUser = function (model) {
	var url = 'http://localhost:8000/testok.json';
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Page1$userEncoder(model));
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Page1$UserCreated,
		A3(_elm_lang$http$Http$post, url, body, _user$project$Page1$decodeUserData));
};
var _user$project$Page1$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'CreateUser':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Page1$doCreateUser(model)
				};
			case 'UserCreated':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{lastRequestCode: _p0._0._0}),
						_1: _user$project$Page1$doListUsers
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{state: _user$project$Page1$ShowUserList}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'UpdateUserList':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{state: _user$project$Page1$ShowUserList, users: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{state: _user$project$Page1$ShowUserList}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'Create':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{state: _user$project$Page1$ShowCreateUser}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ListUsers':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{state: _user$project$Page1$ShowUserList}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetPhoneNumber':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{phoneNumber: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetUserName':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{userName: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{email: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Page1$CreateUser = {ctor: 'CreateUser'};
var _user$project$Page1$Create = {ctor: 'Create'};
var _user$project$Page1$userListView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_CDN$stylesheet,
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$container,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Button$button,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
								_1: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Button$onClick(_user$project$Page1$Create),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Opret bruger'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _user$project$Page1$rightStyle,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'Antal brugere: ',
											_elm_lang$core$Basics$toString(
												_elm_lang$core$List$length(model.users)))),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Table$table(
									{
										options: {
											ctor: '::',
											_0: _rundis$elm_bootstrap$Bootstrap_Table$striped,
											_1: {
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Table$hover,
												_1: {ctor: '[]'}
											}
										},
										thead: _rundis$elm_bootstrap$Bootstrap_Table$simpleThead(
											{
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Table$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Brugernavn'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rundis$elm_bootstrap$Bootstrap_Table$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Telefonnumer'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rundis$elm_bootstrap$Bootstrap_Table$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('Senest aktiv'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}
											}),
										tbody: A2(
											_rundis$elm_bootstrap$Bootstrap_Table$tbody,
											{ctor: '[]'},
											_user$project$Page1$renderUserList(model.users))
									}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Page1$SetEmail = function (a) {
	return {ctor: 'SetEmail', _0: a};
};
var _user$project$Page1$SetPhoneNumber = function (a) {
	return {ctor: 'SetPhoneNumber', _0: a};
};
var _user$project$Page1$SetUserName = function (a) {
	return {ctor: 'SetUserName', _0: a};
};
var _user$project$Page1$ListUsers = {ctor: 'ListUsers'};
var _user$project$Page1$createUserView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_CDN$stylesheet,
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$container,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Form$form,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h4,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Opret FITA Phone bruger'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_rundis$elm_bootstrap$Bootstrap_Form$group,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_rundis$elm_bootstrap$Bootstrap_Form$label,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Brugernavn'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
													{
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$placeholder('fx hansjensen'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(_user$project$Page1$SetUserName),
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rundis$elm_bootstrap$Bootstrap_Form$group,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Form$label,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Telefonnummer'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
														{
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$placeholder('fx 3555'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(_user$project$Page1$SetPhoneNumber),
																_1: {ctor: '[]'}
															}
														}),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rundis$elm_bootstrap$Bootstrap_Form$group,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_rundis$elm_bootstrap$Bootstrap_Form$label,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Email'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
															{
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$placeholder('fx hjensen@domain.dk'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(_user$project$Page1$SetEmail),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Form$row,
													{
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Grid_Row$rightSm,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rundis$elm_bootstrap$Bootstrap_Form$col,
															{
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm1,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rundis$elm_bootstrap$Bootstrap_Button$button,
																	{
																		ctor: '::',
																		_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
																		_1: {
																			ctor: '::',
																			_0: _rundis$elm_bootstrap$Bootstrap_Button$onClick(_user$project$Page1$ListUsers),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('Annullere'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rundis$elm_bootstrap$Bootstrap_Form$col,
																{
																	ctor: '::',
																	_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm4,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_rundis$elm_bootstrap$Bootstrap_Button$button,
																		{
																			ctor: '::',
																			_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
																			_1: {
																				ctor: '::',
																				_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html_Attributes$class('float-right'),
																						_1: {ctor: '[]'}
																					}),
																				_1: {
																					ctor: '::',
																					_0: _rundis$elm_bootstrap$Bootstrap_Button$onClick(_user$project$Page1$CreateUser),
																					_1: {ctor: '[]'}
																				}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('Opret'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Page1$view = function (model) {
	var _p1 = model.state;
	if (_p1.ctor === 'ShowUserList') {
		return _user$project$Page1$userListView(model);
	} else {
		return _user$project$Page1$createUserView(model);
	}
};
var _user$project$Page1$main = _elm_lang$html$Html$program(
	{init: _user$project$Page1$init, view: _user$project$Page1$view, update: _user$project$Page1$update, subscriptions: _user$project$Page1$subscriptions})();
